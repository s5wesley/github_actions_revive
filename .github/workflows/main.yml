name: Docker Compose with Ngrok

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Verify Docker Installation
        run: |
          docker --version
          docker compose version || echo "Docker Compose not found"

      - name: Start Services with Docker Compose
        run: |
          docker compose up -d

      - name: Wait for Services to Initialize
        run: sleep 5

      - name: Check Running Containers
        run: docker ps

      - name: Install Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      - name: Start Ngrok Tunnel
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          ngrok config add-authtoken $NGROK_AUTH_TOKEN
          nohup ngrok http 9971 > /dev/null 2>&1 &

      - name: Get Ngrok Public URL
        run: |
          sleep 5
          NGROK_URL=$(curl --silent http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "Ngrok URL: $NGROK_URL"
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

      - name: Keep Application Running for 5 Minutes
        run: |
          echo "Application is accessible at: $NGROK_URL"
          echo "Keeping application up for 5 minutes..."
          sleep 300  # 300 seconds = 5 minutes

      - name: Verify Logs (if fails)
        if: failure()
        run: docker compose logs

      - name: Stop and Clean Up
        if: always()
        run: docker compose down
